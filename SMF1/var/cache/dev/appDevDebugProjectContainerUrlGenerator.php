<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevDebugProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = [
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_open_file' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:openAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/open',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pdf' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PdfBundle\\Controller\\PdfController::pdfAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pdf/Reclamation/pdf',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reclamation_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficherReclamationUser' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::afficherReclamationUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation/afficherReclamationUser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouterReclamationUser' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::ajouterReclamationUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation/ajouterReclamationUser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouterReclamationUser_type2' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::ajouterReclamationUser_type2Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation/ajouterReclamationUser_type2',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouterReclamationUser_type2_prest' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::ajouterReclamationUser_type2_prestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation/ajouterReclamationUser_type2_prest',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'listeMesPrestataires' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::listeMesPrestatairesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation/listeMesPrestataires',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'recherchePrestataire' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::recherchePrestataireAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation/recherchePrestataire',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'rechercheService' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::rechercheServiceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation/rechercheService',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouterEvaluation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::ajouterEvaluationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation/ajouterEvaluation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficherEvaluation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::afficherEvaluationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation/afficherEvaluation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ListR' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation/Affichage',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ListR_Admin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::show_AdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation/admin/Affichage',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'Consulter_archive' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::show_Admin_ArchiveAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation/admin/Affichage_Archive',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'traiter_reclamation' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::admin_traiter_reclamationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',      4 => true,    ),    1 =>     array (      0 => 'text',      1 => '/reclamation/admin/adminTraiter_Réclamation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'details_reclamtions' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::details_reclamtionsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/reclamation/index/details_reclamtions',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'supprimer_reclamtions_membre' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::supprimer_reclamtions_membreAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/reclamation/index/supprimer_reclamtions_membre',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'supprimer_reclamtions_membre_admin' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::supprimer_reclamtions_membre_adminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/reclamation/admin/supprimer_reclamtions_membre_admin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'passer_en_jugement' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::passer_en_jugementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/reclamation/admin/passer_en_jugement',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'modifier_reclamtions_membre' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::modifier_reclamtions_membreAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/reclamation/index/modifier_reclamtions_membre',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reclamation_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::updateAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation_update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/reclamation/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'score_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::update_scoreAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/score_update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/reclamation/admin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'after_ur_modify' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\ReclamationController::index2Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation/index/after_ur_modify',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'gestion_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MainBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/gestion/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'gestion_index1' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GestionBundle\\Controller\\DefaultController::index1Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/gestion/gestion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'gestion_afficheC' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GestionBundle\\Controller\\ClasseController::afficheCAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/gestion/afficheC',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'statistique_reclamation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GestionBundle\\Controller\\ReclamationController::statistique_reclamationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/gestion/admin/statistique_reclamation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'gestion_ajouterC' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GestionBundle\\Controller\\ClasseController::ajouterCAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/gestion/ajouterC',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'gestion_modifierC' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'GestionBundle\\Controller\\ClasseController::modifierCAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/gestion/modifierC',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'gestion_deleteC' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'GestionBundle\\Controller\\ClasseController::deleteCAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/gestion/deleteC',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'gestion_afficheR' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GestionBundle\\Controller\\ReclamationController::afficheRAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/gestion/afficheR',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'gestion_afficheRfront' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GestionBundle\\Controller\\ReclamationController::afficheRfrontAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/gestion/afficheRfront',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'gestion_ajouterR' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GestionBundle\\Controller\\ReclamationController::ajouterRAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/gestion/ajouterR',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'gestion_modifierR' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GestionBundle\\Controller\\ReclamationController::modifierRAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/gestion/modifierR',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'gestion_deleteR' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'GestionBundle\\Controller\\ReclamationController::deleteRAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/gestion/deleteR',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'gestion_deleteRfront' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'GestionBundle\\Controller\\ReclamationController::deleteRfrontAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/gestion/deleteRfront',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'scolarite_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ScolariteBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/scolarite/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'scolarite_readm' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ScolariteBundle\\Controller\\MatiereController::readmAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/scolarite/afficherM',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'scolarite_ajoutm' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ScolariteBundle\\Controller\\MatiereController::ajoutMAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/scolarite/ajoutM',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'scolarite_delete' => array (  0 =>   array (    0 => 'idmatiere',  ),  1 =>   array (    '_controller' => 'ScolariteBundle\\Controller\\MatiereController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idmatiere',    ),    1 =>     array (      0 => 'text',      1 => '/scolarite/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'scolarite_modifier' => array (  0 =>   array (    0 => 'idmatiere',  ),  1 =>   array (    '_controller' => 'ScolariteBundle\\Controller\\MatiereController::modifierAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idmatiere',    ),    1 =>     array (      0 => 'text',      1 => '/scolarite/modifier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'scolarite_readn' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ScolariteBundle\\Controller\\NoteController::readnAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/scolarite/afficherN',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'scolarite_ajoutn' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ScolariteBundle\\Controller\\NoteController::ajoutnAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/scolarite/ajoutN',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'scolarite_modifiern' => array (  0 =>   array (    0 => 'idnote',  ),  1 =>   array (    '_controller' => 'ScolariteBundle\\Controller\\NoteController::modifiernAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idnote',    ),    1 =>     array (      0 => 'text',      1 => '/scolarite/modifiern',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'scolariteajoutfrontn' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ScolariteBundle\\Controller\\NoteController::ajoutfrontnAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/scolarite/ajoutfrontN',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'scolaritereadfrontn' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ScolariteBundle\\Controller\\NoteController::readfrontnAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/scolarite/afficherfrontN',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'scolarite_modifierfrontn' => array (  0 =>   array (    0 => 'idnote',  ),  1 =>   array (    '_controller' => 'ScolariteBundle\\Controller\\NoteController::modifierfrontnAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idnote',    ),    1 =>     array (      0 => 'text',      1 => '/scolarite/modifierfrontn',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/parent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register1' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:register1Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/enseignant',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register2' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:register2Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/eleve',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:requestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:sendEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:resetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.change_password.controller:changePasswordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fixit_user_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MainBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/home/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fixit_admin_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MainBundle\\Controller\\DefaultController::adminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/home/admin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'creer_votre_compte' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MainBundle\\Controller\\DefaultController::creationcompteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/home/creationcompte',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'acceuil' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    ];
        }
    }

    public function generate($name, $parameters = [], $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
